// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init


generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ----------------------------
// Producto
// ----------------------------
model Producto {
  id_prod                  Int       @id @default(autoincrement())
  nombre_prod              String    @db.VarChar(120)
  tipo_prod                String    @db.VarChar(20)   // INSUMO, VENDIBLE, AMENITY, etc.
  stockeable_prod          Boolean
  vendible_prod            Boolean
  descuentaStockVenta_prod Boolean
  stockMinimoGlobal_prod   Decimal?  @db.Decimal(18, 3)
  activo_prod              Boolean
  fechaAlta_prod           DateTime  @default(now())

  ProductoDepositos ProductoDeposito[]
}

// ----------------------------
// TipoDeposito
// ----------------------------
model TipoDeposito {
  id_tipoDep                   Int     @id @default(autoincrement())
  nombre_tipoDep               String  @db.VarChar(80)
  esPuntoDeVenta_tipoDep       Boolean
  esConsumoInterno_tipoDep     Boolean
  frecuenciaConteoDias_tipoDep Int
  activo_tipoDep               Boolean

  Depositos Deposito[]
}

// ----------------------------
// Deposito
// ----------------------------
model Deposito {
  id_dep        Int       @id @default(autoincrement())
  id_tipoDep    Int
  nombre_dep    String    @db.VarChar(80)
  ubicacion_dep String?   @db.VarChar(120)
  activo_dep    Boolean
  fechaAlta_dep DateTime  @default(now())

  TipoDeposito      TipoDeposito      @relation(fields: [id_tipoDep], references: [id_tipoDep])
  ProductoDepositos ProductoDeposito[]
  Comprobantes      Comprobante[]
}

// ----------------------------
// ProductoDeposito
// ----------------------------
model ProductoDeposito {
  id_prodDep Int @id @default(autoincrement())

  id_prod Int
  id_dep  Int

  minimo_prodDep         Decimal   @db.Decimal(18, 3)
  maximo_prodDep         Decimal?  @db.Decimal(18, 3)
  loteReposicion_prodDep Decimal?  @db.Decimal(18, 3)
  ubicacion_prodDep      String?   @db.VarChar(30)

  Producto Producto @relation(fields: [id_prod], references: [id_prod])
  Deposito Deposito @relation(fields: [id_dep],  references: [id_dep])

  DetallesComprobantes DetalleComprobante[]

  @@index([id_prod])
  @@index([id_dep])
}

// ----------------------------
// Proveedor
// ----------------------------
model Proveedor {
  id_prov        Int      @id @default(autoincrement())
  nombre_prov    String   @db.VarChar(120)
  cuit_prov      String   @db.VarChar(20)
  direccion_prov String?  @db.VarChar(200)
  telefono_prov  String?  @db.VarChar(50)
  email_prov     String?  @db.VarChar(120)
  activo_prov    Boolean  @default(true)
  fechaAlta_prov DateTime @default(now())

  Comprobantes Comprobante[]
}

// ----------------------------
// FormaPago
// ----------------------------
model FormaPago {
  id_fp   Int     @id @default(autoincrement())
  nombre  String  @db.VarChar(80)   // Efectivo, Transferencia, Cheque, etc.
  activo  Boolean @default(true)

  Comprobantes Comprobante[]
}

// ----------------------------
// TipoMovimiento (Entrada / Salida)
// ----------------------------
model TipoMovimiento {
  id_tipoMov Int     @id @default(autoincrement())
  nombre     String  @db.VarChar(60)   // Entrada, Salida
  direccion  String  @db.Char(3)       // IN | OUT
  activo     Boolean @default(true)

  TiposComprobantes TipoComprobante[]
}

// ----------------------------
// TipoComprobante
// ----------------------------
model TipoComprobante {
  id_tipoComp Int     @id @default(autoincrement())
  codigo      String  @db.VarChar(10)   // OC, FAC, REM, AJU, CON
  nombre      String  @db.VarChar(80)
  descripcion String? @db.VarChar(200)
  afectaStock Boolean @default(false)
  activo      Boolean @default(true)

  id_tipoMov Int
  TipoMovimiento TipoMovimiento @relation(fields: [id_tipoMov], references: [id_tipoMov])

  Comprobantes Comprobante[]

  @@index([id_tipoMov])
}

// ----------------------------
// Comprobante (Encabezado)
// ----------------------------
model Comprobante {
  id_comp       Int      @id @default(autoincrement())
  id_tipoComp   Int
  fecha         DateTime
  estado        String   @db.VarChar(20)   // BORRADOR, POSTED, PAGADO
  id_prov       Int?
  id_dep        Int?     // dep√≥sito afectado si aplica
  id_fp         Int?     // forma de pago si aplica
  observacion   String?  @db.VarChar(250)

  TipoComprobante TipoComprobante @relation(fields: [id_tipoComp], references: [id_tipoComp])
  Proveedor       Proveedor?      @relation(fields: [id_prov], references: [id_prov])
  Deposito        Deposito?       @relation(fields: [id_dep], references: [id_dep])
  FormaPago       FormaPago?      @relation(fields: [id_fp], references: [id_fp])

  Detalles DetalleComprobante[]

  @@index([id_tipoComp])
  @@index([id_prov])
  @@index([id_dep])
  @@index([id_fp])
}

// ----------------------------
// DetalleComprobante
// ----------------------------
model DetalleComprobante {
  id_det     Int     @id @default(autoincrement())
  id_comp    Int
  id_prodDep Int
  cantidad   Decimal @db.Decimal(18, 3)
  precio     Decimal? @db.Decimal(18, 2)

  Comprobante     Comprobante     @relation(fields: [id_comp], references: [id_comp])
  ProductoDeposito ProductoDeposito @relation(fields: [id_prodDep], references: [id_prodDep])

  @@index([id_comp])
  @@index([id_prodDep])
}



